#!/bin/sh

export LC=en_US.UTF-8
export POSIXLY_CORRECT=yes

print_help() {
    echo "Usage: tradelog [-h|--help] [FILTER] [COMMAND] [LOG [LOG2 [...]]"
    echo ""
    echo "COMMAND"
    echo "  list-tick   Prints a list of occurring stock symbols"
    echo "  profit      Overall profit"
    echo "  pos         Value of held stock symbol"
    echo "  last-price  Last known price of each ticker"
    echo "  hist-ord    Transactions history of ticker"
    echo "  graph-pos   Graph of values of held positions according to ticker"
    echo ""
    echo "FILTER"
    echo "  -a DATETIME     after - uses tickers after set time"
    echo "  -b DATETIME     before - uses tickers before set time"
    echo "  -t TICKER       uses only selected tickers"
    echo "  -w WIDTH        Width of the longest line in graph"
    echo "  -h --help       help"
}

LOG=""
LOG_GZ=""
COMMAND=""
TICKERS=""
AFTER=""
BEFORE="9999-99-99"
# parsing parameters
while [ "$#" -gt 0 ]; do
    case "$1" in
    -h | --help)
        print_help
        exit 0
        ;;
    -t)
        TICKERS="$2\|$TICKERS"
        shift; shift
        ;;
    -a)
        AFTER="$2"
        shift; shift
        ;;
    *)
        if [ $1 == *".gz" ]; then
            LOG_GZ="$LOG_GZ $1"
        else
            LOG="$LOG $1"
        fi
        shift
        ;;
    esac



done

# Parsing inputs
# Only raw text or stdin
READ_INPUT="cat $LOG"
# gz and raw text
if [ "$LOG_GZ" ] && [ "$LOG" ]; then
    READ_INPUT+=" && gzip -d -c $LOG_GZ"
# only gz
elif [ "$LOG_GZ" ] && [ !"$LOG" ]; then
    READ_INPUT="gzip -d -c $LOG_GZ"
fi

# Parsing TICKERS
if [ "$TICKERS" ]; then
    TICKERS_FILTER="grep -w \$TICKERS"
else
    TICKERS_FILTER="grep ^.*"
fi



READ_FILTER="eval $READ_INPUT | awk -F ';' '\$1 > \"$AFTER\" { print \$0 }' | eval \$TICKERS_FILTER"
$READ_FILTER

exit 0
