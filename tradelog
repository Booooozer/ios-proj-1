#!/bin/sh

export LC=en_US.UTF-8
export POSIXLY_CORRECT=yes

print_help() {
    echo "Usage: tradelog [-h|--help] [FILTER] [COMMAND] [LOG [LOG2 [...]]"
    echo ""
    echo "COMMAND"
    echo "  list-tick   Prints a list of occurring stock symbols"
    echo "  profit      Overall profit"
    echo "  pos         Value of held stock symbol"
    echo "  last-price  Last known price of each ticker"
    echo "  hist-ord    Transactions history of ticker"
    echo "  graph-pos   Graph of values of held positions according to ticker"
    echo ""
    echo "FILTER"
    echo "  -a DATETIME     after - uses tickers after set time"
    echo "  -b DATETIME     before - uses tickers before set time"
    echo "  -t TICKER       uses only selected tickers"
    echo "  -w WIDTH        Width of the longest line in graph"
    echo "  -h --help       help"
}

LOG=""
LOG_GZ=""
COMMAND=""
TICKERS=""
AFTER=""
BEFORE="9999-99-99"
# parsing parameters
while [ "$#" -gt 0 ]; do
    case "$1" in
    -h | --help)
        print_help
        exit 0
        ;;
    list-tick)
        COMMAND="list-tick"
        shift
        ;;
    profit)
        COMMAND="profit"
        shift
        ;;
    pos)
        COMMAND="pos"
        shift
        ;;    
    last-price)
        COMMAND="last-price"
        shift
        ;;
    hist-ord)
        COMMAND="hist-ord"
        shift
        ;;
    graph-pos)
        COMMAND="graph-pos"
        shift
        ;;
    -t)
        TICKERS="$2\|$TICKERS"
        shift; shift
        ;;
    -b)
        BEFORE="$2"
        shift; shift
        ;;
    -a)
        AFTER="$2"
        shift; shift
        ;;
    *)
        if [ $1 == *".gz" ]; then
            LOG_GZ="$LOG_GZ $1"
        else
            LOG="$LOG $1"
        fi
        shift
        ;;
    esac
done

# Parsing inputs
# Only raw text or stdin
READ_INPUT="cat $LOG"
# gz and raw text
if [ "$LOG_GZ" ] && [ "$LOG" ]; then
    READ_INPUT+=" && gzip -d -c $LOG_GZ"
# only gz
elif [ "$LOG_GZ" ] && [ !"$LOG" ]; then
    READ_INPUT="gzip -d -c $LOG_GZ"
fi

# Parsing TICKERS
#if [ "$TICKERS" ]; then
#    TICKERS_FILTER="grep -w \$TICKERS"
#else
#    TICKERS_FILTER="grep ^.*"
#fi


FILTER="eval $READ_INPUT"
# FILTERS
if [ "$TICKERS" ]; then
    FILTER="$FILTER | grep -w \$TICKERS"
fi

if [ "$AFTER" ]; then
    FILTER="$FILTER | awk -F ';' '\$1 > \"$AFTER\" {print \$0}'"
fi

if [ "$BEFORE" != "9999-99-99" ]; then
    FILTER="$FILTER | awk -F ';' '\$1 < \"$BEFORE\" {print \$0}'"
fi

# COMMANDS
if [ "$COMMAND" = "list-tick" ]; then
    FILTER="$FILTER | awk -F ';' '{print \$2}' | sort -u"
fi




#READ_FILTER="eval $READ_INPUT | awk -F ';' '\$1 > \"$AFTER\" { print \$0 }' | eval \$TICKERS_FILTER"

$FILTER
echo "$FILTER"
exit 0
